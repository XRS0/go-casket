// Code generated by kaitai-struct-compiler from a .ksy source file. DO NOT EDIT.

package tools

import "github.com/kaitai-io/kaitai_struct_go_runtime/kaitai"


type ArchiveHeader_ArchiveType int
const (
	ArchiveHeader_ArchiveType__Unknown ArchiveHeader_ArchiveType = 0
	ArchiveHeader_ArchiveType__Zip ArchiveHeader_ArchiveType = 1
	ArchiveHeader_ArchiveType__Rar4 ArchiveHeader_ArchiveType = 2
	ArchiveHeader_ArchiveType__Rar5 ArchiveHeader_ArchiveType = 3
	ArchiveHeader_ArchiveType__SevenZ ArchiveHeader_ArchiveType = 4
	ArchiveHeader_ArchiveType__Gzip ArchiveHeader_ArchiveType = 5
	ArchiveHeader_ArchiveType__Bzip2 ArchiveHeader_ArchiveType = 6
	ArchiveHeader_ArchiveType__Xz ArchiveHeader_ArchiveType = 7
	ArchiveHeader_ArchiveType__Cab ArchiveHeader_ArchiveType = 8
	ArchiveHeader_ArchiveType__Arj ArchiveHeader_ArchiveType = 9
	ArchiveHeader_ArchiveType__Tar ArchiveHeader_ArchiveType = 10
)
type ArchiveHeader struct {
	Signature []uint8
	_io *kaitai.Stream
	_root *ArchiveHeader
	_parent interface{}
	_f_archive bool
	archive ArchiveHeader_ArchiveType
}
func NewArchiveHeader() *ArchiveHeader {
	return &ArchiveHeader{
	}
}

func (this *ArchiveHeader) Read(io *kaitai.Stream, parent interface{}, root *ArchiveHeader) (err error) {
	this._io = io
	this._parent = parent
	this._root = root

	for i := 0; i < int(8); i++ {
		_ = i
		tmp1, err := this._io.ReadU1()
		if err != nil {
			return err
		}
		this.Signature = append(this.Signature, tmp1)
	}
	return err
}
func (this *ArchiveHeader) Archive() (v ArchiveHeader_ArchiveType, err error) {
	if (this._f_archive) {
		return this.archive, nil
	}
	var tmp2 int8;
	if ( ((this.Signature[0] == 80) && (this.Signature[1] == 75) && (this.Signature[2] == 3) && (this.Signature[3] == 4)) ) {
		tmp2 = 1
	} else {
		var tmp3 int8;
		if ( ((this.Signature[0] == 55) && (this.Signature[1] == 122) && (this.Signature[2] == 188) && (this.Signature[3] == 175) && (this.Signature[4] == 39) && (this.Signature[5] == 28)) ) {
			tmp3 = 4
		} else {
			var tmp4 int8;
			if ( ((this.Signature[0] == 82) && (this.Signature[1] == 97) && (this.Signature[2] == 114) && (this.Signature[3] == 33) && (this.Signature[4] == 26) && (this.Signature[5] == 7) && (this.Signature[6] == 0)) ) {
				tmp4 = 2
			} else {
				var tmp5 int8;
				if ( ((this.Signature[0] == 82) && (this.Signature[1] == 97) && (this.Signature[2] == 114) && (this.Signature[3] == 33) && (this.Signature[4] == 26) && (this.Signature[5] == 7) && (this.Signature[6] == 1) && (this.Signature[7] == 0)) ) {
					tmp5 = 3
				} else {
					var tmp6 int8;
					if ( ((this.Signature[0] == 31) && (this.Signature[1] == 139) && (this.Signature[2] == 8)) ) {
						tmp6 = 5
					} else {
						var tmp7 int8;
						if ( ((this.Signature[0] == 66) && (this.Signature[1] == 90) && (this.Signature[2] == 104)) ) {
							tmp7 = 6
						} else {
							var tmp8 int8;
							if ( ((this.Signature[0] == 253) && (this.Signature[1] == 55) && (this.Signature[2] == 122) && (this.Signature[3] == 88) && (this.Signature[4] == 90) && (this.Signature[5] == 0)) ) {
								tmp8 = 7
							} else {
								var tmp9 int8;
								if ( ((this.Signature[0] == 77) && (this.Signature[1] == 83) && (this.Signature[2] == 67) && (this.Signature[3] == 70)) ) {
									tmp9 = 8
								} else {
									var tmp10 int8;
									if ( ((this.Signature[0] == 96) && (this.Signature[1] == 234)) ) {
										tmp10 = 9
									} else {
										tmp10 = 0
									}
									tmp9 = tmp10
								}
								tmp8 = tmp9
							}
							tmp7 = tmp8
						}
						tmp6 = tmp7
					}
					tmp5 = tmp6
				}
				tmp4 = tmp5
			}
			tmp3 = tmp4
		}
		tmp2 = tmp3
	}
	this.archive = ArchiveHeader_ArchiveType(ArchiveHeader_ArchiveType(tmp2))
	this._f_archive = true
	return this.archive, nil
}
